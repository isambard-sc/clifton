# SPDX-FileCopyrightText: Â© 2024 Matt Williams <matt@milliams.com>
# SPDX-License-Identifier: MIT

name: Check

on: 
  push:
  pull_request:
  workflow_call:
    inputs:
      ref:
        type: string
        default: ''

permissions:
  contents: read

jobs:
  licenses:
    name: License REUSE spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install reuse
        run: |
          python -m venv ~/venv
          ~/venv/bin/pip install reuse
      - name: Check REUSE spec
        run: ~/venv/bin/reuse lint
  changelog:
    name: Changelog format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install kacl
        run: |
          python -m venv ~/venv
          ~/venv/bin/pip install python-kacl
      - name: Check changelog format
        run: ~/venv/bin/kacl-cli verify
  code-checks:
    name: Tests and lints
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            os: "ubuntu-latest"
            cross: false
          - target: "aarch64-unknown-linux-gnu"
            os: "ubuntu-latest"
            cross: true
          - target: "x86_64-unknown-linux-musl"
            os: "ubuntu-latest"
            cross: false
          - target: "aarch64-unknown-linux-musl"
            os: "ubuntu-latest"
            cross: true
          - target: "x86_64-pc-windows-gnu"
            os: "ubuntu-latest"
            cross: true
          - target: "aarch64-apple-darwin"
            os: "macOS-latest"
            cross: false
          - target: "x86_64-apple-darwin"
            os: "macOS-latest"
            cross: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0  # This is needed so that git-describe works properly to set the version
      - name: install MUSL
        if: contains(matrix.target, 'musl')
        run: sudo apt install musl-tools
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Install cross
        uses: taiki-e/install-action@cross
        if: matrix.cross
      - name: Formatting
        run: cargo fmt --check
      - name: Linting
        run: cargo clippy
      - name: Build
        run: cargo build --target=${{ matrix.target }}
        if: ${{ ! matrix.cross }}
      - name: Build
        run: cross build --target=${{ matrix.target }}
        if: matrix.cross
      - name: Test
        run: cargo test --target=${{ matrix.target }}
        if: ${{ ! matrix.cross }}
